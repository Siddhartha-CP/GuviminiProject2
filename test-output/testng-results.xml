<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="23" passed="20" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-19T18:58:18 IST" name="Suite" finished-at="2025-04-19T18:59:50 IST" duration-ms="92383">
    <groups>
      <group name="regression">
        <method signature="ContactListTest.testContactsDisplayed()[pri:1, instance:minitests.ContactListTest@aafcffa]" name="testContactsDisplayed" class="minitests.ContactListTest"/>
        <method signature="ContactListTest.testEditContact()[pri:2, instance:minitests.ContactListTest@aafcffa]" name="testEditContact" class="minitests.ContactListTest"/>
        <method signature="ContactListTest.testClickLogoutBtn()[pri:6, instance:minitests.ContactListTest@aafcffa]" name="testClickLogoutBtn" class="minitests.ContactListTest"/>
        <method signature="AddContactTest.addContacts()[pri:1, instance:minitests.AddContactTest@dfddc9a]" name="addContacts" class="minitests.AddContactTest"/>
        <method signature="AddContactTest.testSortAndExtension()[pri:2, instance:minitests.AddContactTest@dfddc9a]" name="testSortAndExtension" class="minitests.AddContactTest"/>
        <method signature="AddContactTest.addOptionalDetails()[pri:3, instance:minitests.AddContactTest@dfddc9a]" name="addOptionalDetails" class="minitests.AddContactTest"/>
        <method signature="LoginTest.testLogin()[pri:3, instance:minitests.LoginTest@349c1daf]" name="testLogin" class="minitests.LoginTest"/>
        <method signature="AddContactTest.testInvalidDate()[pri:5, instance:minitests.AddContactTest@dfddc9a]" name="testInvalidDate" class="minitests.AddContactTest"/>
        <method signature="LoginTest.callTestLogout()[pri:5, instance:minitests.LoginTest@349c1daf]" name="callTestLogout" class="minitests.LoginTest"/>
        <method signature="LoginTest.testInvalidDetails()[pri:6, instance:minitests.LoginTest@349c1daf]" name="testInvalidDetails" class="minitests.LoginTest"/>
      </group> <!-- regression -->
      <group name="sanity">
        <method signature="ContactListTest.testContactsDisplayed()[pri:1, instance:minitests.ContactListTest@aafcffa]" name="testContactsDisplayed" class="minitests.ContactListTest"/>
        <method signature="ContactListTest.testDeleteConatct()[pri:4, instance:minitests.ContactListTest@aafcffa]" name="testDeleteConatct" class="minitests.ContactListTest"/>
        <method signature="ContactListTest.testClickLogoutBtn()[pri:6, instance:minitests.ContactListTest@aafcffa]" name="testClickLogoutBtn" class="minitests.ContactListTest"/>
        <method signature="AddContactTest.addContacts()[pri:1, instance:minitests.AddContactTest@dfddc9a]" name="addContacts" class="minitests.AddContactTest"/>
        <method signature="HomeTest.testSignUpVisibility()[pri:1, instance:minitests.HomeTest@5a9d6f02]" name="testSignUpVisibility" class="minitests.HomeTest"/>
        <method signature="LoginTest.testSubumitBtnVisible()[pri:1, instance:minitests.LoginTest@349c1daf]" name="testSubumitBtnVisible" class="minitests.LoginTest"/>
        <method signature="AddContactTest.testSortAndExtension()[pri:2, instance:minitests.AddContactTest@dfddc9a]" name="testSortAndExtension" class="minitests.AddContactTest"/>
        <method signature="LoginTest.testSubmitClickAble()[pri:2, instance:minitests.LoginTest@349c1daf]" name="testSubmitClickAble" class="minitests.LoginTest"/>
        <method signature="LoginTest.testLogin()[pri:3, instance:minitests.LoginTest@349c1daf]" name="testLogin" class="minitests.LoginTest"/>
        <method signature="AddContactTest.testEmptyFields()[pri:6, instance:minitests.AddContactTest@dfddc9a]" name="testEmptyFields" class="minitests.AddContactTest"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2025-04-19T18:58:18 IST" name="Test" finished-at="2025-04-19T18:59:50 IST" duration-ms="92383">
      <class name="minitests.AddContactTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:58:35 IST" name="setup" finished-at="2025-04-19T18:58:38 IST" duration-ms="3719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addContacts()[pri:1, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:58:38 IST" name="addContacts" finished-at="2025-04-19T18:58:55 IST" duration-ms="17053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addContacts -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:58:55 IST" name="screenshot" finished-at="2025-04-19T18:58:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addContacts status=SUCCESS method=AddContactTest.addContacts()[pri:1, instance:minitests.AddContactTest@dfddc9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testSortAndExtension()[pri:2, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:58:55 IST" name="testSortAndExtension" finished-at="2025-04-19T18:58:59 IST" duration-ms="3922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortAndExtension -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:58:59 IST" name="screenshot" finished-at="2025-04-19T18:58:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSortAndExtension status=SUCCESS method=AddContactTest.testSortAndExtension()[pri:2, instance:minitests.AddContactTest@dfddc9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="addOptionalDetails()[pri:3, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:58:59 IST" name="addOptionalDetails" finished-at="2025-04-19T18:59:05 IST" duration-ms="5796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOptionalDetails -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:59:05 IST" name="screenshot" finished-at="2025-04-19T18:59:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addOptionalDetails status=SUCCESS method=AddContactTest.addOptionalDetails()[pri:3, instance:minitests.AddContactTest@dfddc9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="AddDuplicateContacts()[pri:4, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:59:05 IST" name="AddDuplicateContacts" finished-at="2025-04-19T18:59:09 IST" duration-ms="3902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddDuplicateContacts -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:59:09 IST" name="screenshot" finished-at="2025-04-19T18:59:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddDuplicateContacts status=SUCCESS method=AddContactTest.AddDuplicateContacts()[pri:4, instance:minitests.AddContactTest@dfddc9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="AddDuplicateContacts()[pri:4, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:59:09 IST" name="AddDuplicateContacts" finished-at="2025-04-19T18:59:13 IST" duration-ms="4026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddDuplicateContacts -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:59:13 IST" name="screenshot" finished-at="2025-04-19T18:59:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddDuplicateContacts status=SUCCESS method=AddContactTest.AddDuplicateContacts()[pri:4, instance:minitests.AddContactTest@dfddc9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testInvalidDate()[pri:5, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:59:13 IST" name="testInvalidDate" finished-at="2025-04-19T18:59:17 IST" duration-ms="4240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidDate -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:59:17 IST" name="screenshot" finished-at="2025-04-19T18:59:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidDate status=SUCCESS method=AddContactTest.testInvalidDate()[pri:5, instance:minitests.AddContactTest@dfddc9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testEmptyFields()[pri:6, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:59:17 IST" name="testEmptyFields" finished-at="2025-04-19T18:59:22 IST" duration-ms="4693" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at minitests.AddContactTest.testEmptyFields(AddContactTest.java:144)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyFields -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:59:22 IST" name="screenshot" finished-at="2025-04-19T18:59:22 IST" duration-ms="476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmptyFields status=FAILURE method=AddContactTest.testEmptyFields()[pri:6, instance:minitests.AddContactTest@dfddc9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:minitests.AddContactTest@dfddc9a]" started-at="2025-04-19T18:59:22 IST" name="tearDown" finished-at="2025-04-19T18:59:23 IST" duration-ms="532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- minitests.AddContactTest -->
      <class name="minitests.LoginTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:26 IST" name="setup" finished-at="2025-04-19T18:58:30 IST" duration-ms="3657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSubumitBtnVisible()[pri:1, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:30 IST" name="testSubumitBtnVisible" finished-at="2025-04-19T18:58:30 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubumitBtnVisible -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:30 IST" name="screenshot" finished-at="2025-04-19T18:58:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubumitBtnVisible status=SUCCESS method=LoginTest.testSubumitBtnVisible()[pri:1, instance:minitests.LoginTest@349c1daf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testSubmitClickAble()[pri:2, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:30 IST" name="testSubmitClickAble" finished-at="2025-04-19T18:58:30 IST" duration-ms="60" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubmitClickAble -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:30 IST" name="screenshot" finished-at="2025-04-19T18:58:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubmitClickAble status=SUCCESS method=LoginTest.testSubmitClickAble()[pri:2, instance:minitests.LoginTest@349c1daf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testLogin()[pri:3, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:30 IST" name="testLogin" finished-at="2025-04-19T18:58:31 IST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:31 IST" name="screenshot" finished-at="2025-04-19T18:58:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=LoginTest.testLogin()[pri:3, instance:minitests.LoginTest@349c1daf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="callTestLogout()[pri:5, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:31 IST" name="callTestLogout" finished-at="2025-04-19T18:58:32 IST" duration-ms="1567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callTestLogout -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:32 IST" name="screenshot" finished-at="2025-04-19T18:58:32 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=callTestLogout status=SUCCESS method=LoginTest.callTestLogout()[pri:5, instance:minitests.LoginTest@349c1daf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testInvalidDetails()[pri:6, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:32 IST" name="testInvalidDetails" finished-at="2025-04-19T18:58:34 IST" duration-ms="1637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidDetails -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:34 IST" name="screenshot" finished-at="2025-04-19T18:58:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidDetails status=SUCCESS method=LoginTest.testInvalidDetails()[pri:6, instance:minitests.LoginTest@349c1daf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:minitests.LoginTest@349c1daf]" started-at="2025-04-19T18:58:34 IST" name="tearDown" finished-at="2025-04-19T18:58:35 IST" duration-ms="573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- minitests.LoginTest -->
      <class name="minitests.HomeTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:18 IST" name="setup" finished-at="2025-04-19T18:58:23 IST" duration-ms="4528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSignUpVisibility()[pri:1, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:23 IST" name="testSignUpVisibility" finished-at="2025-04-19T18:58:23 IST" duration-ms="151" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at minitests.HomeTest.testSignUpVisibility(HomeTest.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignUpVisibility -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:23 IST" name="screenshot" finished-at="2025-04-19T18:58:23 IST" duration-ms="580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSignUpVisibility status=FAILURE method=HomeTest.testSignUpVisibility()[pri:1, instance:minitests.HomeTest@5a9d6f02] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testSignUpClickable()[pri:2, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:23 IST" name="testSignUpClickable" finished-at="2025-04-19T18:58:23 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignUpClickable -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:23 IST" name="screenshot" finished-at="2025-04-19T18:58:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSignUpClickable status=SUCCESS method=HomeTest.testSignUpClickable()[pri:2, instance:minitests.HomeTest@5a9d6f02] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testSignUpClick()[pri:3, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:23 IST" name="testSignUpClick" finished-at="2025-04-19T18:58:24 IST" duration-ms="799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignUpClick -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:24 IST" name="screenshot" finished-at="2025-04-19T18:58:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSignUpClick status=SUCCESS method=HomeTest.testSignUpClick()[pri:3, instance:minitests.HomeTest@5a9d6f02] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testAddusertxt()[pri:4, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:24 IST" name="testAddusertxt" finished-at="2025-04-19T18:58:24 IST" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddusertxt -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:24 IST" name="screenshot" finished-at="2025-04-19T18:58:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddusertxt status=SUCCESS method=HomeTest.testAddusertxt()[pri:4, instance:minitests.HomeTest@5a9d6f02] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testSignupUser()[pri:5, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:24 IST" name="testSignupUser" finished-at="2025-04-19T18:58:26 IST" duration-ms="1377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignupUser -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:26 IST" name="screenshot" finished-at="2025-04-19T18:58:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSignupUser status=SUCCESS method=HomeTest.testSignupUser()[pri:5, instance:minitests.HomeTest@5a9d6f02] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:58:26 IST" name="tearDown" finished-at="2025-04-19T18:58:26 IST" duration-ms="531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:minitests.HomeTest@5a9d6f02]" started-at="2025-04-19T18:59:49 IST" name="tearDownTest" finished-at="2025-04-19T18:59:50 IST" duration-ms="814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- minitests.HomeTest -->
      <class name="minitests.ContactListTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:23 IST" name="setup" finished-at="2025-04-19T18:59:27 IST" duration-ms="3772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testContactsDisplayed()[pri:1, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:27 IST" name="testContactsDisplayed" finished-at="2025-04-19T18:59:31 IST" duration-ms="3994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContactsDisplayed -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:31 IST" name="screenshot" finished-at="2025-04-19T18:59:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testContactsDisplayed status=SUCCESS method=ContactListTest.testContactsDisplayed()[pri:1, instance:minitests.ContactListTest@aafcffa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testEditContact()[pri:2, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:31 IST" name="testEditContact" finished-at="2025-04-19T18:59:39 IST" duration-ms="8306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditContact -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:39 IST" name="screenshot" finished-at="2025-04-19T18:59:39 IST" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEditContact status=SUCCESS method=ContactListTest.testEditContact()[pri:2, instance:minitests.ContactListTest@aafcffa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="validateOtherFields()[pri:3, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:39 IST" name="validateOtherFields" finished-at="2025-04-19T18:59:39 IST" depends-on-methods="minitests.ContactListTest.testEditContact" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOtherFields -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:39 IST" name="screenshot" finished-at="2025-04-19T18:59:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOtherFields status=SUCCESS method=ContactListTest.validateOtherFields()[pri:3, instance:minitests.ContactListTest@aafcffa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testDeleteConatct()[pri:4, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:39 IST" name="testDeleteConatct" finished-at="2025-04-19T18:59:46 IST" duration-ms="6881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteConatct -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:46 IST" name="screenshot" finished-at="2025-04-19T18:59:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeleteConatct status=SUCCESS method=ContactListTest.testDeleteConatct()[pri:4, instance:minitests.ContactListTest@aafcffa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testVisibilityOfLogoutBtn()[pri:5, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:46 IST" name="testVisibilityOfLogoutBtn" finished-at="2025-04-19T18:59:46 IST" duration-ms="42" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at minitests.ContactListTest.testVisibilityOfLogoutBtn(ContactListTest.java:97)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVisibilityOfLogoutBtn -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:46 IST" name="screenshot" finished-at="2025-04-19T18:59:47 IST" duration-ms="571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVisibilityOfLogoutBtn status=FAILURE method=ContactListTest.testVisibilityOfLogoutBtn()[pri:5, instance:minitests.ContactListTest@aafcffa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testClickLogoutBtn()[pri:6, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:47 IST" name="testClickLogoutBtn" finished-at="2025-04-19T18:59:49 IST" duration-ms="1878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickLogoutBtn -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:49 IST" name="screenshot" finished-at="2025-04-19T18:59:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickLogoutBtn status=SUCCESS method=ContactListTest.testClickLogoutBtn()[pri:6, instance:minitests.ContactListTest@aafcffa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:minitests.ContactListTest@aafcffa]" started-at="2025-04-19T18:59:49 IST" name="tearDown" finished-at="2025-04-19T18:59:49 IST" duration-ms="424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- minitests.ContactListTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
