<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="11" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-22T23:32:41 IST" name="Suite" finished-at="2025-04-22T23:33:58 IST" duration-ms="76718">
    <groups>
      <group name="regression">
        <method signature="AddContactTest.addContacts()[pri:1, instance:minitests.AddContactTest@3a1dd365]" name="addContacts" class="minitests.AddContactTest"/>
        <method signature="ContactListTest.testContactsDisplayed()[pri:1, instance:minitests.ContactListTest@68044f4]" name="testContactsDisplayed" class="minitests.ContactListTest"/>
        <method signature="AddContactTest.testSortAndExtension()[pri:2, instance:minitests.AddContactTest@3a1dd365]" name="testSortAndExtension" class="minitests.AddContactTest"/>
        <method signature="ContactListTest.testEditContact()[pri:2, instance:minitests.ContactListTest@68044f4]" name="testEditContact" class="minitests.ContactListTest"/>
        <method signature="AddContactTest.addOptionalDetails()[pri:3, instance:minitests.AddContactTest@3a1dd365]" name="addOptionalDetails" class="minitests.AddContactTest"/>
        <method signature="LoginTest.testLogin()[pri:3, instance:minitests.LoginTest@6b7906b3]" name="testLogin" class="minitests.LoginTest"/>
        <method signature="AddContactTest.testInvalidDate()[pri:5, instance:minitests.AddContactTest@3a1dd365]" name="testInvalidDate" class="minitests.AddContactTest"/>
        <method signature="LoginTest.callTestLogout()[pri:5, instance:minitests.LoginTest@6b7906b3]" name="callTestLogout" class="minitests.LoginTest"/>
        <method signature="ContactListTest.testClickLogoutBtn()[pri:6, instance:minitests.ContactListTest@68044f4]" name="testClickLogoutBtn" class="minitests.ContactListTest"/>
        <method signature="LoginTest.testInvalidDetails()[pri:6, instance:minitests.LoginTest@6b7906b3]" name="testInvalidDetails" class="minitests.LoginTest"/>
      </group> <!-- regression -->
      <group name="sanity">
        <method signature="AddContactTest.addContacts()[pri:1, instance:minitests.AddContactTest@3a1dd365]" name="addContacts" class="minitests.AddContactTest"/>
        <method signature="ContactListTest.testContactsDisplayed()[pri:1, instance:minitests.ContactListTest@68044f4]" name="testContactsDisplayed" class="minitests.ContactListTest"/>
        <method signature="HomeTest.testSignUpVisibility()[pri:1, instance:minitests.HomeTest@626c44e7]" name="testSignUpVisibility" class="minitests.HomeTest"/>
        <method signature="LoginTest.testSubumitBtnVisible()[pri:1, instance:minitests.LoginTest@6b7906b3]" name="testSubumitBtnVisible" class="minitests.LoginTest"/>
        <method signature="AddContactTest.testSortAndExtension()[pri:2, instance:minitests.AddContactTest@3a1dd365]" name="testSortAndExtension" class="minitests.AddContactTest"/>
        <method signature="LoginTest.testSubmitClickAble()[pri:2, instance:minitests.LoginTest@6b7906b3]" name="testSubmitClickAble" class="minitests.LoginTest"/>
        <method signature="LoginTest.testLogin()[pri:3, instance:minitests.LoginTest@6b7906b3]" name="testLogin" class="minitests.LoginTest"/>
        <method signature="ContactListTest.testDeleteConatct()[pri:4, instance:minitests.ContactListTest@68044f4]" name="testDeleteConatct" class="minitests.ContactListTest"/>
        <method signature="AddContactTest.testEmptyFields()[pri:6, instance:minitests.AddContactTest@3a1dd365]" name="testEmptyFields" class="minitests.AddContactTest"/>
        <method signature="ContactListTest.testClickLogoutBtn()[pri:6, instance:minitests.ContactListTest@68044f4]" name="testClickLogoutBtn" class="minitests.ContactListTest"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2025-04-22T23:32:41 IST" name="Test" finished-at="2025-04-22T23:33:58 IST" duration-ms="76718">
      <class name="minitests.AddContactTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:32:57 IST" name="setup" finished-at="2025-04-22T23:33:00 IST" duration-ms="3848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addContacts()[pri:1, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:00 IST" name="addContacts" finished-at="2025-04-22T23:33:17 IST" duration-ms="16597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addContacts -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:17 IST" name="screenshot" finished-at="2025-04-22T23:33:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addContacts status=SUCCESS method=AddContactTest.addContacts()[pri:1, instance:minitests.AddContactTest@3a1dd365] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testSortAndExtension()[pri:2, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:17 IST" name="testSortAndExtension" finished-at="2025-04-22T23:33:19 IST" duration-ms="1926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortAndExtension -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:19 IST" name="screenshot" finished-at="2025-04-22T23:33:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSortAndExtension status=SUCCESS method=AddContactTest.testSortAndExtension()[pri:2, instance:minitests.AddContactTest@3a1dd365] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="addOptionalDetails()[pri:3, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:19 IST" name="addOptionalDetails" finished-at="2025-04-22T23:33:25 IST" duration-ms="5801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOptionalDetails -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:25 IST" name="screenshot" finished-at="2025-04-22T23:33:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addOptionalDetails status=SUCCESS method=AddContactTest.addOptionalDetails()[pri:3, instance:minitests.AddContactTest@3a1dd365] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testInvalidDate()[pri:5, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:25 IST" name="testInvalidDate" finished-at="2025-04-22T23:33:29 IST" duration-ms="4132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidDate -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:29 IST" name="screenshot" finished-at="2025-04-22T23:33:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidDate status=SUCCESS method=AddContactTest.testInvalidDate()[pri:5, instance:minitests.AddContactTest@3a1dd365] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testEmptyFields()[pri:6, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:29 IST" name="testEmptyFields" finished-at="2025-04-22T23:33:33 IST" duration-ms="4575" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at minitests.AddContactTest.testEmptyFields(AddContactTest.java:144)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyFields -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:33 IST" name="screenshot" finished-at="2025-04-22T23:33:34 IST" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmptyFields status=FAILURE method=AddContactTest.testEmptyFields()[pri:6, instance:minitests.AddContactTest@3a1dd365] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:minitests.AddContactTest@3a1dd365]" started-at="2025-04-22T23:33:34 IST" name="tearDown" finished-at="2025-04-22T23:33:35 IST" duration-ms="430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- minitests.AddContactTest -->
      <class name="minitests.LoginTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:48 IST" name="setup" finished-at="2025-04-22T23:32:52 IST" duration-ms="3567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSubumitBtnVisible()[pri:1, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:52 IST" name="testSubumitBtnVisible" finished-at="2025-04-22T23:32:52 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubumitBtnVisible -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:52 IST" name="screenshot" finished-at="2025-04-22T23:32:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubumitBtnVisible status=SUCCESS method=LoginTest.testSubumitBtnVisible()[pri:1, instance:minitests.LoginTest@6b7906b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testSubmitClickAble()[pri:2, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:52 IST" name="testSubmitClickAble" finished-at="2025-04-22T23:32:52 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubmitClickAble -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:52 IST" name="screenshot" finished-at="2025-04-22T23:32:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubmitClickAble status=SUCCESS method=LoginTest.testSubmitClickAble()[pri:2, instance:minitests.LoginTest@6b7906b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testLogin()[pri:3, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:52 IST" name="testLogin" finished-at="2025-04-22T23:32:53 IST" duration-ms="662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:53 IST" name="screenshot" finished-at="2025-04-22T23:32:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=LoginTest.testLogin()[pri:3, instance:minitests.LoginTest@6b7906b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="callTestLogout()[pri:5, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:53 IST" name="callTestLogout" finished-at="2025-04-22T23:32:54 IST" duration-ms="1651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callTestLogout -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:54 IST" name="screenshot" finished-at="2025-04-22T23:32:54 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=callTestLogout status=SUCCESS method=LoginTest.callTestLogout()[pri:5, instance:minitests.LoginTest@6b7906b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testInvalidDetails()[pri:6, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:54 IST" name="testInvalidDetails" finished-at="2025-04-22T23:32:56 IST" duration-ms="1705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidDetails -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:56 IST" name="screenshot" finished-at="2025-04-22T23:32:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidDetails status=SUCCESS method=LoginTest.testInvalidDetails()[pri:6, instance:minitests.LoginTest@6b7906b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:minitests.LoginTest@6b7906b3]" started-at="2025-04-22T23:32:56 IST" name="tearDown" finished-at="2025-04-22T23:32:57 IST" duration-ms="606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- minitests.LoginTest -->
      <class name="minitests.HomeTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:minitests.HomeTest@626c44e7]" started-at="2025-04-22T23:32:42 IST" name="setup" finished-at="2025-04-22T23:32:47 IST" duration-ms="4767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSignUpVisibility()[pri:1, instance:minitests.HomeTest@626c44e7]" started-at="2025-04-22T23:32:47 IST" name="testSignUpVisibility" finished-at="2025-04-22T23:32:47 IST" duration-ms="164" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at minitests.HomeTest.testSignUpVisibility(HomeTest.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignUpVisibility -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.HomeTest@626c44e7]" started-at="2025-04-22T23:32:47 IST" name="screenshot" finished-at="2025-04-22T23:32:47 IST" duration-ms="698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSignUpVisibility status=FAILURE method=HomeTest.testSignUpVisibility()[pri:1, instance:minitests.HomeTest@626c44e7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:minitests.HomeTest@626c44e7]" started-at="2025-04-22T23:32:47 IST" name="tearDown" finished-at="2025-04-22T23:32:48 IST" duration-ms="621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- minitests.HomeTest -->
      <class name="minitests.ContactListTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:minitests.ContactListTest@68044f4]" started-at="2025-04-22T23:33:35 IST" name="setup" finished-at="2025-04-22T23:33:38 IST" duration-ms="3535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testContactsDisplayed()[pri:1, instance:minitests.ContactListTest@68044f4]" started-at="2025-04-22T23:33:38 IST" name="testContactsDisplayed" finished-at="2025-04-22T23:33:41 IST" duration-ms="3049" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at minitests.ContactListTest.testContactsDisplayed(ContactListTest.java:32)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContactsDisplayed -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.ContactListTest@68044f4]" started-at="2025-04-22T23:33:41 IST" name="screenshot" finished-at="2025-04-22T23:33:42 IST" duration-ms="573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testContactsDisplayed status=FAILURE method=ContactListTest.testContactsDisplayed()[pri:1, instance:minitests.ContactListTest@68044f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testEditContact()[pri:2, instance:minitests.ContactListTest@68044f4]" started-at="2025-04-22T23:33:42 IST" name="testEditContact" finished-at="2025-04-22T23:33:51 IST" duration-ms="8619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditContact -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.ContactListTest@68044f4]" started-at="2025-04-22T23:33:51 IST" name="screenshot" finished-at="2025-04-22T23:33:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEditContact status=SUCCESS method=ContactListTest.testEditContact()[pri:2, instance:minitests.ContactListTest@68044f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testDeleteConatct()[pri:4, instance:minitests.ContactListTest@68044f4]" started-at="2025-04-22T23:33:51 IST" name="testDeleteConatct" finished-at="2025-04-22T23:33:55 IST" duration-ms="4090" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Email not found after delete operation expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Email not found after delete operation expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at minitests.ContactListTest.testDeleteConatct(ContactListTest.java:90)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteConatct -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.ContactListTest@68044f4]" started-at="2025-04-22T23:33:55 IST" name="screenshot" finished-at="2025-04-22T23:33:55 IST" duration-ms="590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeleteConatct status=FAILURE method=ContactListTest.testDeleteConatct()[pri:4, instance:minitests.ContactListTest@68044f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method signature="testClickLogoutBtn()[pri:6, instance:minitests.ContactListTest@68044f4]" started-at="2025-04-22T23:33:55 IST" name="testClickLogoutBtn" finished-at="2025-04-22T23:33:57 IST" duration-ms="2096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickLogoutBtn -->
        <test-method is-config="true" signature="screenshot(org.testng.ITestResult)[pri:0, instance:minitests.ContactListTest@68044f4]" started-at="2025-04-22T23:33:57 IST" name="screenshot" finished-at="2025-04-22T23:33:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickLogoutBtn status=SUCCESS method=ContactListTest.testClickLogoutBtn()[pri:6, instance:minitests.ContactListTest@68044f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:minitests.ContactListTest@68044f4]" started-at="2025-04-22T23:33:57 IST" name="tearDown" finished-at="2025-04-22T23:33:58 IST" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- minitests.ContactListTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
